// Code generated by protoc-gen-go. DO NOT EDIT.
// source: movie/movie.proto

package movie

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Movie struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ImdbId               string   `protobuf:"bytes,3,opt,name=imdb_id,json=imdbId,proto3" json:"imdb_id,omitempty"`
	PredictedRating      float64  `protobuf:"fixed64,4,opt,name=predicted_rating,json=predictedRating,proto3" json:"predicted_rating,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Movie) Reset()         { *m = Movie{} }
func (m *Movie) String() string { return proto.CompactTextString(m) }
func (*Movie) ProtoMessage()    {}
func (*Movie) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc162e4bb218d9c6, []int{0}
}

func (m *Movie) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Movie.Unmarshal(m, b)
}
func (m *Movie) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Movie.Marshal(b, m, deterministic)
}
func (m *Movie) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Movie.Merge(m, src)
}
func (m *Movie) XXX_Size() int {
	return xxx_messageInfo_Movie.Size(m)
}
func (m *Movie) XXX_DiscardUnknown() {
	xxx_messageInfo_Movie.DiscardUnknown(m)
}

var xxx_messageInfo_Movie proto.InternalMessageInfo

func (m *Movie) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Movie) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Movie) GetImdbId() string {
	if m != nil {
		return m.ImdbId
	}
	return ""
}

func (m *Movie) GetPredictedRating() float64 {
	if m != nil {
		return m.PredictedRating
	}
	return 0
}

type RecRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecRequest) Reset()         { *m = RecRequest{} }
func (m *RecRequest) String() string { return proto.CompactTextString(m) }
func (*RecRequest) ProtoMessage()    {}
func (*RecRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc162e4bb218d9c6, []int{1}
}

func (m *RecRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecRequest.Unmarshal(m, b)
}
func (m *RecRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecRequest.Marshal(b, m, deterministic)
}
func (m *RecRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecRequest.Merge(m, src)
}
func (m *RecRequest) XXX_Size() int {
	return xxx_messageInfo_RecRequest.Size(m)
}
func (m *RecRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecRequest proto.InternalMessageInfo

func (m *RecRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type RecResponse struct {
	Movies               []*Movie `protobuf:"bytes,1,rep,name=movies,proto3" json:"movies,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecResponse) Reset()         { *m = RecResponse{} }
func (m *RecResponse) String() string { return proto.CompactTextString(m) }
func (*RecResponse) ProtoMessage()    {}
func (*RecResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc162e4bb218d9c6, []int{2}
}

func (m *RecResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecResponse.Unmarshal(m, b)
}
func (m *RecResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecResponse.Marshal(b, m, deterministic)
}
func (m *RecResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecResponse.Merge(m, src)
}
func (m *RecResponse) XXX_Size() int {
	return xxx_messageInfo_RecResponse.Size(m)
}
func (m *RecResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecResponse proto.InternalMessageInfo

func (m *RecResponse) GetMovies() []*Movie {
	if m != nil {
		return m.Movies
	}
	return nil
}

func init() {
	proto.RegisterType((*Movie)(nil), "movie.Movie")
	proto.RegisterType((*RecRequest)(nil), "movie.RecRequest")
	proto.RegisterType((*RecResponse)(nil), "movie.RecResponse")
}

func init() { proto.RegisterFile("movie/movie.proto", fileDescriptor_cc162e4bb218d9c6) }

var fileDescriptor_cc162e4bb218d9c6 = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0xd9, 0xc4, 0x44, 0x9c, 0x4a, 0xb5, 0x83, 0xe0, 0xe2, 0x29, 0x04, 0x85, 0x78, 0x89,
	0xd0, 0xbe, 0x80, 0x27, 0xa1, 0x07, 0x2f, 0xfb, 0x02, 0xa1, 0xcd, 0x0c, 0x3a, 0x60, 0xb2, 0x69,
	0x76, 0xeb, 0xf3, 0x4b, 0x26, 0xa5, 0xf6, 0xb2, 0xec, 0xef, 0xb7, 0x7f, 0xbe, 0x6f, 0x17, 0x56,
	0x9d, 0xff, 0x15, 0x7e, 0xd3, 0xb1, 0x1e, 0x46, 0x1f, 0x3d, 0x66, 0x0a, 0xe5, 0x01, 0xb2, 0xcf,
	0x69, 0x82, 0x4b, 0x48, 0x84, 0xac, 0x29, 0x4c, 0x95, 0xba, 0x44, 0x08, 0x1f, 0x20, 0x8b, 0x12,
	0x7f, 0xd8, 0x26, 0x85, 0xa9, 0x6e, 0xdc, 0x0c, 0xf8, 0x08, 0xd7, 0xd2, 0xd1, 0xbe, 0x11, 0xb2,
	0xa9, 0xfa, 0x7c, 0xc2, 0x2d, 0xe1, 0x2b, 0xdc, 0x0f, 0x23, 0x93, 0xb4, 0x91, 0xa9, 0x19, 0x77,
	0x51, 0xfa, 0x2f, 0x7b, 0x55, 0x98, 0xca, 0xb8, 0xbb, 0xb3, 0x77, 0xaa, 0xcb, 0x17, 0x00, 0xc7,
	0xad, 0xe3, 0xc3, 0x91, 0x43, 0x9c, 0x6e, 0x3c, 0x06, 0x1e, 0x9b, 0x73, 0x78, 0x3e, 0xe1, 0x96,
	0xca, 0x0d, 0x2c, 0x74, 0x5b, 0x18, 0x7c, 0x1f, 0x18, 0x9f, 0x21, 0xd7, 0xc6, 0xc1, 0x9a, 0x22,
	0xad, 0x16, 0xeb, 0xdb, 0x7a, 0x7e, 0x8d, 0xb6, 0x77, 0xa7, 0xb5, 0xf5, 0x3b, 0x2c, 0x1d, 0xb7,
	0xbe, 0xeb, 0xb8, 0xa7, 0x5d, 0x14, 0xdf, 0x63, 0x0d, 0xd9, 0x07, 0xc7, 0xf6, 0x1b, 0x57, 0xa7,
	0x03, 0xff, 0xd9, 0x4f, 0x78, 0xa9, 0xe6, 0x9c, 0x7d, 0xae, 0xdf, 0xb3, 0xf9, 0x0b, 0x00, 0x00,
	0xff, 0xff, 0xb0, 0xd5, 0x7a, 0x57, 0x33, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RecommendationClient is the client API for Recommendation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecommendationClient interface {
	Fetch(ctx context.Context, in *RecRequest, opts ...grpc.CallOption) (*RecResponse, error)
}

type recommendationClient struct {
	cc *grpc.ClientConn
}

func NewRecommendationClient(cc *grpc.ClientConn) RecommendationClient {
	return &recommendationClient{cc}
}

func (c *recommendationClient) Fetch(ctx context.Context, in *RecRequest, opts ...grpc.CallOption) (*RecResponse, error) {
	out := new(RecResponse)
	err := c.cc.Invoke(ctx, "/movie.Recommendation/Fetch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecommendationServer is the server API for Recommendation service.
type RecommendationServer interface {
	Fetch(context.Context, *RecRequest) (*RecResponse, error)
}

func RegisterRecommendationServer(s *grpc.Server, srv RecommendationServer) {
	s.RegisterService(&_Recommendation_serviceDesc, srv)
}

func _Recommendation_Fetch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecommendationServer).Fetch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/movie.Recommendation/Fetch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecommendationServer).Fetch(ctx, req.(*RecRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Recommendation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "movie.Recommendation",
	HandlerType: (*RecommendationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Fetch",
			Handler:    _Recommendation_Fetch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "movie/movie.proto",
}
